
-EXERCISE

GOAL: in foglio di testo, scrivere le query necessarie per rispondere ai seguenti quesiti:
1) Selezionare tutti gli ospiti
2) Selezionare tutti gli ospiti con document type = a CI
3) Selezionare i paganti che abbiano un ospite id associato
4) Selezionare tutte le stanze del primo piano
5) Selezionare tutti gli ospiti che iniziano per E
6) Selezionare tutti gli ospiti che abbiano meno di 30 anni
7) Seleziona tutte le prenotazioni precedenti a maggio 2018

-ANSWERS

1) SELECT * FROM ospiti;
2) SELECT * FROM ospiti WHERE document_type LIKE 'CI';
3) SELECT * FROM paganti WHERE ospite_id IS NOT NULL;
4) SELECT * FROM stanze WHERE floor LIKE '1';
5) SELECT * FROM ospiti WHERE name LIKE 'E%'; (PER NOME)
6) SELECT name, lastname, YEAR(NOW()) - YEAR(date_of_birth) AS age FROM ospiti WHERE YEAR(NOW()) - YEAR(date_of_birth) < '30';
7) SELECT * FROM prenotazioni WHERE created_at < '2018-05-01';

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

-EXERCISE first part

GOAL: come ieri, generare le query per rispondere alle interrogazioni in allegato:
1) Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?
2) Stampare tutti gli ospiti per ogni prenotazione.
3) Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018.
4) Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano.
5) Prendi i dati di fatturazione per la prenotazione con id=7.
6) Le stanze sono state tutte prenotate almeno una volta?(Visualizzare le stanze non ancora prenotate)

-ANSWERS

1) SELECT ospiti.name, ospiti.lastname, ospite_id
   FROM prenotazioni
   JOIN prenotazioni_has_ospiti
      ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
   JOIN ospiti
      ON prenotazioni_has_ospiti.ospite_id = ospiti.id
   GROUP BY prenotazioni_has_ospiti.ospite_id
   HAVING COUNT(prenotazioni_has_ospiti.ospite_id) > 2

2) SELECT prenotazioni_has_ospiti.prenotazione_id, ospiti.name AS nome_ospite, ospiti.lastname AS cognome_ospite
    FROM ospiti
    JOIN prenotazioni_has_ospiti
      ON ospiti.id = prenotazioni_has_ospiti.ospite_id
    JOIN prenotazioni
      ON prenotazioni_has_ospiti.prenotazione_id = prenotazioni.id

3) SELECT
          ospiti.name AS nome_ospite, ospiti.lastname AS cognome_ospite,
          pagamenti.price,
          paganti.name AS nome_pagante, paganti.lastname AS cognome_pagante,
          DATE(prenotazioni.created_at)
    FROM ospiti
    JOIN prenotazioni_has_ospiti
      ON ospiti.id = prenotazioni_has_ospiti.ospite_id
    JOIN prenotazioni
      ON prenotazioni_has_ospiti.prenotazione_id = prenotazioni.id
    JOIN pagamenti
      ON prenotazioni.id = pagamenti.prenotazione_id
    JOIN paganti
      ON pagamenti.pagante_id = paganti.id
    WHERE prenotazioni.created_at > '2018-05-01' AND prenotazioni.created_at < '2018-06-01'

4) SELECT SUM(pagamenti.price)
	 FROM prenotazioni
	 JOIN stanze
	   ON prenotazioni.stanza_id = stanze.id
	 JOIN pagamenti
		 ON prenotazioni.id = pagamenti.prenotazione_id
	 WHERE stanze.floor LIKE 1;

5) SELECT prenotazioni.id, paganti.name, paganti.lastname, paganti.address, paganti.created_at, paganti.updated_at
   FROM paganti
   JOIN pagamenti
      ON paganti.id = pagamenti.pagante_id
   JOIN prenotazioni
      ON prenotazioni.id = pagamenti.prenotazione_id
   WHERE prenotazioni.id = 7

6) SELECT stanze.id, stanze.room_number, stanze.floor, stanze.beds
   FROM prenotazioni
   RIGHT JOIN stanze
      ON prenotazioni.stanza_id = stanze.id
   WHERE prenotazioni.stanza_id IS NULL

-EXERCISE second part

GOAL: come ieri, generare le query per rispondere alle interrogazioni in allegato:
1) Conta gli ospiti raggruppandoli per anno di nascita.
2) Somma i prezzi dei pagamenti raggruppandoli per status.
3) Conta quante volte e stata prenotata ogni stanza.
4) Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti.
5) Quante prenotazioni ha fatto l'ospite che ha fatto piu prenotazioni?(quante, non chi!).

-ANSWERS

1) SELECT YEAR(date_of_birth), COUNT(*) FROM ospiti GROUP BY YEAR(date_of_birth);
2) SELECT status, SUM(price) FROM pagamenti GROUP BY status;
3) SELECT stanza_id, COUNT(*) FROM prenotazioni GROUP BY stanza_id;
4) SELECT HOUR(created_at), COUNT(*) FROM prenotazioni GROUP BY HOUR(created_at) ORDER BY COUNT(*) DESC;
5) SELECT ospite_id, COUNT(*) AS total FROM prenotazioni_has_ospiti GROUP BY ospite_id ORDER BY COUNT(*) DESC
